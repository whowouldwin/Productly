{"version":3,"file":"script.js","mappings":";;;;;;;;;;;;;;AAAO;AACP,kBAAkB,sCAAsC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4EAA4E,iBAAiB;;AAE7F;AACA;AACA,qEAAqE,WAAW;;AAEhF;AACA;AACA;AACA,iEAAiE,IAAI;AACrE,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjCmC;;AAE5B,4BAA4B,4CAAK;AACxC,0BAA0B,4CAA4C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4EAA4E,iBAAiB;;AAE7F;AACA;;AAEA,mEAAmE,UAAU;;AAE7E,qEAAqE,WAAW;;AAEhF,sEAAsE,aAAa;;AAEnF;AACA;AACA;AACA,iEAAiE,IAAI;AACrE,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/CO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCxEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACLA;AACA;AACA,WAAW,QAAQ;;AAEwB;AACJ;AACe;;;AAGtD;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,mDAAO;AAC/B,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,+CAAK;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,oBAAoB,6DAAY;AAChC;AACA;AACA","sources":["webpack://productly/./js/Article.js","webpack://productly/./js/ArticleModal.js","webpack://productly/./js/Modal.js","webpack://productly/webpack/bootstrap","webpack://productly/webpack/runtime/define property getters","webpack://productly/webpack/runtime/hasOwnProperty shorthand","webpack://productly/webpack/runtime/make namespace object","webpack://productly/./src/index.js"],"sourcesContent":["export class Article {\n    constructor({ id, title, urlToImage, tags, ...rest }) {\n        this.id = id;\n        this.title = title;\n        this.urlToImage = urlToImage;\n        this.tags = tags;\n    }\n    //Article generator\n    generateArticle() {\n        let template = '';\n        let article = document.createElement('article');\n        article.className = 'strategy block-shadowed';\n        article.setAttribute('data-id', this.id);\n\n        this.urlToImage && (template += `<img class=\"strategy__image\" src=${this.urlToImage} alt=\"strategy\">`)\n\n        if (this.title || this.tags) {\n            template += `<div class=\"strategy__content\">`\n            this.title && (template += `<h3 class=\"strategy__name\">${this.title}</h3>`)\n\n            if (this.tags){\n                template += `<div class=\"strategy__tags tags\">`\n                this.tags.map(tag => {\n                    template += `<span class=\"tag tag_colored\">${tag}</span>`\n                })\n                template += `</div>`\n            }\n\n            template += `</div>`\n        }\n        article.innerHTML = template;\n        return article;\n    }\n}","import { Modal } from './Modal.js';\n\nexport class  ArticleModal extends Modal {\n    constructor(classes, {id, title, urlToImage, tags, content, date }) {\n        super(classes);\n        this.id = id;\n        this.title = title;\n        this.urlToImage = urlToImage;\n        this.tags = tags;\n        this.content = content;\n        this.date = date;\n    }\n\n    //Article modal generator\n    generateContent() {\n        let template = '';\n        let article = document.createElement('div');\n        article.className = 'article-modal__content';\n\n        this.urlToImage && (template += `<img class=\"strategy__image\" src=${this.urlToImage} alt=\"strategy\">`)\n\n        if (this.title || this.tags || this.content || this.date) {\n            template += `<div class=\"strategy__content\">`\n\n            this.date && (template += `<p class=\"strategy__date\">${this.date}</p>`)\n\n            this.title && (template += `<h3 class=\"strategy__name\">${this.title}</h3>`)\n\n            this.content && (template += `<p class=\"strategy__text\">${this.content}</p>`)\n\n            if (this.tags){\n                template += `<div class=\"strategy__tags tags\">`\n                this.tags.map(tag => {\n                    template += `<span class=\"tag tag_colored\">${tag}</span>`\n                })\n                template += `</div>`\n            }\n\n            template += `</div>`\n        }\n        article.innerHTML = template;\n        return article;\n    }\n    renderModal() {\n        let content = this.generateContent();\n        super.buildModal(content);\n    }\n}","export class Modal {\n    constructor(classes) {\n        this.classes = classes;\n        this.modal = '';\n        this.modalContent = '';\n        this.modalCloseBtn = '';\n        this.overlay = '';\n    }\n\n    buildModal(content) {\n        //Overlay\n        this.overlay = this.createDomNode(this.overlay, 'div','overlay', 'overlay_modal');\n\n        //Modal\n        this.modal = this.createDomNode(this.modal, 'div','modal', this.classes);\n\n        //Modal content\n        this.modalContent = this.createDomNode(this.modalContent,'div', 'modal__content')\n\n        //CloseBtn\n        this.modalCloseBtn = this.createDomNode(this.modalCloseBtn,'span', 'modal__close-icon');\n        this.modalCloseBtn.innerHTML = '<svg width=\"21\" height=\"22\" viewBox=\"0 0 21 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n' +\n            '<path d=\"M12.4239 10.5173L20.6009 2.34005C21.1331 1.80815 21.1331 0.94815 20.6009 0.416255C20.069 -0.11564 19.209 -0.11564 18.6771 0.416255L10.4999 8.59349L2.3229 0.416255C1.79076 -0.11564 0.931004 -0.11564 0.399108 0.416255C-0.133036 0.94815 -0.133036 1.80815 0.399108 2.34005L8.5761 10.5173L0.399108 18.6945C-0.133036 19.2264 -0.133036 20.0864 0.399108 20.6183C0.664184 20.8836 1.01272 21.0169 1.361 21.0169C1.70929 21.0169 2.05758 20.8836 2.3229 20.6183L10.4999 12.4411L18.6771 20.6183C18.9425 20.8836 19.2907 21.0169 19.639 21.0169C19.9873 21.0169 20.3356 20.8836 20.6009 20.6183C21.1331 20.0864 21.1331 19.2264 20.6009 18.6945L12.4239 10.5173Z\" fill=\"#2F281E\"/>\\n' +\n            '</svg>'\n        this.setContent(content);\n        this.appendModalElements();\n\n        //Bind events\n        this.bindEvents();\n\n\n        //Open modal\n        this.openModal();\n    }\n\n    createDomNode(node, element, ...classes) {\n        node = document.createElement(element);\n        node.classList.add(...classes);\n        return node;\n    };\n    setContent(content) {\n        if (typeof content === 'string') {\n            this.modalContent.innerHTML = content;\n        } else {\n            this.modalContent.innerHTML = '';\n            this.modalContent.appendChild(content);\n        }\n    }\n    appendModalElements() {\n        this.modal.append(this.modalCloseBtn);\n        this.modal.append(this.modalContent);\n        this.overlay.append(this.modal);\n    }\n\n    bindEvents() {\n        this.modalCloseBtn.addEventListener('click', this.closeModal);\n        this.overlay.addEventListener('click', this.closeModal);\n    }\n\n    openModal() {\n        console.log('Test openModal');\n        document.body.append(this.overlay);\n    }\n    closeModal(e) {\n        let overlay = document.querySelector('.overlay');\n        if (overlay) {\n            let classes = e.target.classList;\n            if (classes.contains('overlay') || classes.contains('modal__close-icon')) {\n                overlay.remove();\n            }\n        }\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\n// import fs from \"fs\";\n// import jsdom from \"jsdom\";\n// const { JSDOM } = jsdom;\n\nimport { Article } from \"../js/Article.js\";\nimport { Modal } from \"../js/Modal.js\";\nimport  { ArticleModal } from \"../js/ArticleModal.js\";\n\n\n// const filePath = \"../index.html\";\n// const html = fs.readFileSync(filePath, \"utf-8\");\n// const dom = new JSDOM(html);\n// global.window = dom.window;\n// global.document = dom.window.document;\n\n\n\n\nconst data = [\n    {\n        id: 1,\n        title: 'Increasing Prosperity With Positive Thinking',\n        urlToImage: 'images/strategies/1.jpg',\n        tags: ['Art', 'Design'],\n        content: 'Knowing yourself is the first, and a very critical step in the process of planning your future. How can you figure out what you want to do with your life if you don’t know: What am I going to do with the  rest of my life? What is my dream job? What do I enjoy doing? What’s my passion? What kind of career fits my personality?',\n        date: '01.01.2020'\n    },\n    {\n        id: 2,\n        title: 'Motivation Is The First Step To Success',\n        urlToImage: 'images/strategies/2.jpg',\n        tags: ['Culture'],\n        content: 'Knowing yourself is the first, and a very critical step in the process of planning your future. How can you figure out what you want to do with your life if you don’t know: What am I going to do with the  rest of my life? What is my dream job? What do I enjoy doing? What’s my passion? What kind of career fits my personality?',\n        date: '01.01.2020'\n    },\n    {\n        id: 3,\n        title: 'Success Steps For Your Personal Or Business Life',\n        urlToImage: 'images/strategies/3.jpg',\n        tags: ['Culture', 'Design', 'Art'],\n        content: 'Knowing yourself is the first, and a very critical step in the process of planning your future. How can you figure out what you want to do with your life if you don’t know: What am I going to do with the  rest of my life? What is my dream job? What do I enjoy doing? What’s my passion? What kind of career fits my personality?',\n        date: '01.01.2020'\n    }\n];\n\n\nwindow.onload = function () {\n    //Render articles\n    if (data) {\n        renderArticlesToDom()\n    }\n\n    //Tags\n    addTagsClickHandler();\n\n    //generate base modal from modal class\n    addToolsClickHandler();\n\n\n}\nconst addTagsClickHandler = () => {\n    document.querySelector('.strategies__tags').addEventListener('click', (event) => {\n        if (event.target.classList.contains('tag')) {\n            let clickedTag = event.target;\n            removeSelectedTags();\n            selectClickedTag(clickedTag);\n            if (clickedTag.innerText === 'All') {\n                showAllStrategies();\n            } else {\n                filterStrategyBySelectedTag(clickedTag.innerText);\n            }\n        }\n    })\n}\nconst removeSelectedTags = () => {\n    let tags = document.querySelectorAll('.strategies__tags .tag');\n    console.log(tags);\n    tags.forEach(tag => {\n        tag.classList.remove('tag_selected');\n        tag.classList.add('tag_bordered');\n    })\n};\n\nconst selectClickedTag = (clickedTag) => {\n    clickedTag.classList.add('tag_selected');\n    clickedTag.classList.remove('tag_bordered');\n};\nconst showAllStrategies = () => {\n    let strategies = document.querySelectorAll('.strategy-wrapper .strategy');\n    strategies.forEach(strategy => {\n        strategy.classList.remove('strategy_hidden');\n\n    })\n};\nconst filterStrategyBySelectedTag = (selectedTag) => {\n    let strategies = document.querySelectorAll('.strategy-wrapper .strategy');\n    strategies.forEach(strategy => {\n        strategy.classList.add('strategy_hidden');\n        strategy.querySelectorAll('.tag').forEach(tag => {\n                if (tag.innerText === selectedTag) {\n                    strategy.classList.remove('strategy_hidden');\n                }\n            })\n    })\n};\n\nconst renderArticlesToDom = () => {\n  let strategiesWrapper = getStrategiesWrapper();\n  generateArticles(data).forEach(article => {\n          strategiesWrapper.append(article.generateArticle());\n      });\n  addStrategyClickHandler();\n}\nconst getStrategiesWrapper = () => {\n  const strategiesContainer = document.querySelector('.strategy-wrapper');\n  strategiesContainer.innerHTML = '';\n  return strategiesContainer;\n}\n\nconst generateArticles = (data) => {\n  let articles = [];\n  data.forEach(article => {\n      articles.push(new Article(article))\n  });\n  return articles;\n}\n\nconst addToolsClickHandler = () => {\n  document.querySelector('.tools__button .button').addEventListener('click', () => {\n    generateToolsModal();\n  })\n}\n\nconst generateToolsModal = () => {\n    renderModalWindow('Test');\n}\nconst renderModalWindow = (content) => {\n  let modal = new Modal('tools-modal');\n  modal.buildModal(content);\n}\n\nconst addStrategyClickHandler = () => {\n  document.querySelector('.strategy-wrapper').addEventListener('click', (e) => {\n      if (e.target.closest('.strategy')) {\n        let clickedStrategyId = e.target.closest('.strategy').getAttribute('data-id');\n        console.log(clickedStrategyId);\n        let clickedStrategyData = getClickedData(clickedStrategyId);\n        renderArticleModalWindow(clickedStrategyData);\n      }\n  })\n}\nconst getClickedData = (id) => {\n  return data.find( article => article.id == id);\n}\nconst renderArticleModalWindow = (article) => {\n    let modal = new ArticleModal('article-modal', article);\n    modal.renderModal();\n}\n//test git\n\n"],"names":[],"sourceRoot":""}